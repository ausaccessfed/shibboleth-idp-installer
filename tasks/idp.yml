---
- name: 'Set shared facts'
  set_fact:
    idp_dist_archive_path='{{ installer.path }}/shibboleth-identity-provider-{{ download.shib_idp.version }}.tar.gz'

- name: 'Create Shibboleth IdP source root directory'
  file:
    name: '{{ shib_idp.src_root }}'
    state: directory
    owner: root
    group: jetty
    mode: 0750

- name: 'Download Shibboleth IdP distribution'
  get_url:
    url: '{{ urls.shib_idp.url }}'
    dest: '{{ idp_dist_archive_path }}'
    sha256sum: '{{ download.shib_idp.sha256sum }}'

- name: 'Extract Shibboleth IdP distribution'
  shell: >
    umask 0027;
    tar zx -C {{ shib_idp.src_root }} -f {{ idp_dist_archive_path }} --no-same-permissions;
    chgrp -R jetty {{ shib_idp.src }}
    creates={{ shib_idp.src }}

- name: 'Set Shibboleth IdP source directory permissions'
  file:
    name: '{{ shib_idp.src }}'
    state: directory
    owner: root
    group: jetty
    mode: 0750

- name: 'Create default jetty profile'
  template:
    dest: '/etc/default/jetty'
    src: 'templates/jetty/jetty-profile'
    owner: root
    group: jetty
    mode: 0640
    backup: yes

- name: 'Create shibboleth start.ini'
  template:
    dest: '{{ jetty.base }}/start.ini'
    src: 'templates/idp/start.ini'
    owner: root
    group: jetty
    mode: 0640
    backup: yes

- name: 'Set backchannel.ini'
  template:
    dest: '{{ jetty.base }}/start.d/backchannel.ini'
    src: 'templates/idp/backchannel.ini'
    owner: root
    group: jetty
    mode: 0640
    backup: yes

- name: 'Create jetty-logging.properties'
  template:
    dest: '{{ jetty.base }}/resources/jetty-logging.properties'
    src: 'templates/idp/jetty-logging.properties'
    owner: root
    group: jetty
    mode: 0640
    backup: yes

- name: 'Create Logback access configuration'
  template:
    dest: '{{ jetty.base }}/etc/logback-access.xml'
    src: 'templates/idp/logback-access.xml'
    owner: root
    group: jetty
    mode: 0640
    backup: yes

- name: 'Create IdP context in jetty'
  template:
    dest: '{{ jetty.base }}/webapps/idp.xml'
    src: 'templates/idp/idp.xml'
    owner: root
    group: jetty
    mode: 0640

# Wraps the Shibboleth IdP installer
- name: 'Create installer script'
  template:
    dest: '{{ shib_idp.src_root }}/install-{{ download.shib_idp.version }}.sh'
    src: 'templates/idp/install.sh'
    owner: root
    group: root
    mode: 0700

- name: 'Create installer properties'
  template:
    dest: '{{ shib_idp.src_root }}/install-{{ download.shib_idp.version }}.properties'
    src: 'templates/idp/install.properties'
    owner: root
    group: root
    mode: 0700

- name: 'Run IdP install'
  command: '{{ shib_idp.src_root }}/install-{{ download.shib_idp.version }}.sh'
  args:
    creates: '{{ shib_idp.home }}'

- name: 'Create libs directory'
  file:
    name:  '{{ shib_idp.libs }}'
    owner: root 
    group: jetty
    mode: 0750
    state: directory
  
- name: 'Remove old versions of libraries that may be previously been deployed'
  file:
    path: '{{ item }}'
    state: absent
  with_items:
    - '{{ shib_idp.home }}/edit-webapp/WEB-INF/lib/aaf-shib-ext-1.0.0.jar'
    - '{{ shib_idp.home }}/edit-webapp/WEB-INF/lib/aaf-shib-ext-1.0.1.jar'
    - '{{ shib_idp.home }}/edit-webapp/WEB-INF/lib/aaf-shib-ext-1.1.0.jar'
    - '{{ shib_idp.home }}/edit-webapp/WEB-INF/lib/aaf-shib-ext-1.1.1.jar'
    - '{{ shib_idp.home }}/edit-webapp/WEB-INF/lib/cas-client-core-3.3.3.jar'
    - '{{ shib_idp.home }}/edit-webapp/WEB-INF/lib/shib-cas-authenticator-3.0.0.jar' 
    - '{{ jetty.base }}/lib/ext/jetty9-dta-ssl-1.0.0.jar'
    - '{{ shib_idp.home }}/edit-webapp/WEB-INF/lib/commons-dbcp2-2.1.1.jar'
    - '{{ shib_idp.home }}/edit-webapp/WEB-INF/lib/commons-pool2-2.4.2.jar'
    - '{{ jetty.base }}/lib/ext/mysql-connector-java-5.1.35-bin.jar'

- name: 'Install aaf-shib-ext library'
  get_url:
    url: '{{ urls.aaf_shib_ext.url }}'
    dest: '{{ shib_idp.libs }}/aaf-shib-ext-{{ download.aaf_shib_ext.version }}.jar'
    sha256sum: '{{ download.aaf_shib_ext.sha256sum }}'

- name: 'Link to aaf-shib-ext library'
  file:
    name: '{{ shib_idp.home }}/edit-webapp/WEB-INF/lib/aaf-shib-ext.jar'
    src: '{{ shib_idp.libs }}/aaf-shib-ext-{{ download.aaf_shib_ext.version }}.jar'
    state: link

- name: 'Install cas-client-core library'
  get_url:
    url: '{{ urls.cas_client_core.url }}'
    dest: '{{ shib_idp.libs }}/cas-client-core-{{ download.cas_client_core.version }}.jar'
    sha256sum: '{{ download.cas_client_core.sha256sum }}'

- name: 'Link to cas-client-core library'
  file:
    name: '{{ shib_idp.home }}/edit-webapp/WEB-INF/lib/cas-client-core.jar'
    src: '{{ shib_idp.libs }}/cas-client-core-{{ download.cas_client_core.version }}.jar'
    state: link

- name: 'Install shib-cas-authenticator library'
  get_url:
    url:  '{{ urls.shib_cas_authenticator.url }}'
    dest: '{{ shib_idp.libs }}/shib-cas-authenticator-{{ download.shib_cas_authenticator.version }}.jar'
    sha256sum: '{{ download.shib_cas_authenticator.sha256sum }}'

- name: 'Link to shib-cas-authenticator library'
  file:
    name: '{{ shib_idp.home }}/edit-webapp/WEB-INF/lib/shib-cas-authenticator.jar'
    src: '{{ shib_idp.libs }}/shib-cas-authenticator-{{ download.shib_cas_authenticator.version }}.jar'
    state: link

- name: 'Install jetty-dta-ssl'
  get_url:
    url: '{{ urls.dta_ssl.url }}'
    dest:  '{{ shib_idp.libs }}/jetty-dta-ssl-{{ download.dta_ssl.version }}.jar'
    sha256sum: '{{ download.dta_ssl.sha256sum }}'
    owner: root
    group: jetty
    mode: 0640

- name: 'Link to jetty-dta-ssl library'
  file:
    name: '{{ jetty.base }}/lib/ext/jetty9-dta-ssl.jar'
    src: '{{ shib_idp.libs }}/jetty-dta-ssl-{{ download.dta_ssl.version }}.jar'
    state: link

- name: 'Install Jars - commons-dbcp2'
  get_url:
    url: '{{ urls.commons_dbcp2.url }}'
    dest: '{{ installer.path }}/commons-dbcp2-{{ download.commons_dbcp2.version }}-bin.tar.gz'
    sha256sum: '{{ download.commons_dbcp2.sha256sum }}'

- name: 'Extract commons-dbcp2 distribution'
  shell: >
    umask 0027;
    tar zx -C {{ installer.path }} -f {{ installer.path }}/commons-dbcp2-{{ download.commons_dbcp2.version }}-bin.tar.gz
    creates={{ installer.path }}/commons-dbcp2-{{ download.commons_dbcp2.version }}/commons-dbcp2-{{ download.commons_dbcp2.version }}.jar

- name: 'Copy over commons-dbcp2 lib'
  command: 'cp {{ installer.path }}/commons-dbcp2-{{ download.commons_dbcp2.version }}/commons-dbcp2-{{ download.commons_dbcp2.version }}.jar {{ shib_idp.libs }}/ creates="{{ shib_idp.libs }}/commons-dbcp2-{{ download.commons_dbcp2.version }}.jar"'

- name: 'Link to commons-dbcp2 lib'
  file:
    name: '{{ shib_idp.home }}/edit-webapp/WEB-INF/lib/commons-dbcp2.jar'
    src: '{{ shib_idp.libs }}/commons-dbcp2-{{ download.commons_dbcp2.version }}.jar'
    state: link

- name: 'Install Jars - commons-pool2'
  get_url:
    url: '{{ urls.commons_pool2.url }}'
    dest: '{{ installer.path }}/commons-pool2-{{ download.commons_pool2.version }}-bin.tar.gz'
    sha256sum: '{{ download.commons_pool2.sha256sum }}'

- name: 'Extract commons-pool2 distribution'
  shell: >
    umask 0027;
    tar zx -C {{ installer.path }} -f {{ installer.path }}/commons-pool2-{{ download.commons_pool2.version }}-bin.tar.gz
    creates={{ installer.path }}/commons-pool2-{{ download.commons_pool2.version }}/commons-pool2-{{ download.commons_pool2.version }}.jar

- name: 'Copy over commons-pool2 lib'
  command: 'cp {{ installer.path }}/commons-pool2-{{ download.commons_pool2.version }}/commons-pool2-{{ download.commons_pool2.version }}.jar {{ shib_idp.libs }}/ creates="{{ shib_idp.libs }}/commons-pool2-{{ download.commons_pool2.version }}.jar"'

- name: 'Link to commons-pool2 lib'
  file:
    name: '{{ shib_idp.home }}/edit-webapp/WEB-INF/lib/commons-pool2.jar'
    src: '{{ shib_idp.libs }}/commons-pool2-{{ download.commons_pool2.version }}.jar'
    state: link

- name: 'Set customised error-messages.properties'
  template:
    dest: '{{ shib_idp.home }}/messages/error-messages.properties'
    src: 'assets/{{ inventory_hostname }}/idp/branding/messages/error-messages.properties'
    owner: root
    group: jetty
    mode: 0640
    backup: yes

- name: 'Set customised authn-messages.properties'
  template:
    dest: '{{ shib_idp.home }}/messages/authn-messages.properties'
    src: 'assets/{{ inventory_hostname }}/idp/branding/messages/authn-messages.properties'
    owner: root
    group: jetty
    mode: 0640
    backup: yes

- name: 'Set customised consent-messages.properties'
  template:
    dest: '{{ shib_idp.home }}/messages/consent-messages.properties'
    src: 'assets/{{ inventory_hostname }}/idp/branding/messages/consent-messages.properties'
    owner: root
    group: jetty
    mode: 0640
    backup: yes

- name: 'Copy customised IdP branding (css)'
  copy:
    dest: '{{ shib_idp.home }}/edit-webapp/css/'
    src: 'assets/{{ inventory_hostname }}/idp/branding/webapp/css/'
    owner: root
    group: jetty
    mode: 0640
    backup: no 

- name: 'Remove "dummy" IdP branding'
  file:
    path: '{{ shib_idp.home }}/edit-webapp/images/{{ item }}'
    state: absent
  with_items:
    - dummylogo-mobile.png
    - dummylogo.png

- name: 'Copy customised IdP branding (images)'
  copy:
    dest: '{{ shib_idp.home }}/edit-webapp/images/'
    src: 'assets/{{ inventory_hostname }}/idp/branding/webapp/images/'
    owner: root
    group: jetty
    mode: 0640
    backup: no

- name: 'Set customised views'
  template:
    dest: '{{ shib_idp.home }}/views/{{ item }}'
    src: 'assets/{{ inventory_hostname }}/idp/branding/views/{{ item }}'
    owner: root
    group: jetty
    mode: 0640
    backup: yes
  with_items:
    - error.vm
    - expiring-password.vm
    - login-error.vm
    - login.vm
    - logout-complete.vm
    - logout-propagate.vm
    - logout-response.vm
    - logout.vm
    - resolvertest.vm
    - spnego-unavailable.vm
    - user-prefs.js
    - user-prefs.vm
    - intercept/attribute-release.vm
    - intercept/terms-of-use.vm

- name: 'Re-run IdP install.sh to install aaf-shib-ext and IdP branding'
  shell: '{{ shib_idp.src_root }}/install-{{ download.shib_idp.version}}.sh'

- name: 'Install mysql connector library'
  get_url:
    url: '{{ urls.mysql_connector.url }}'
    dest: '{{ installer.path }}/mysql-connector-java-{{ download.mysql_connector.version }}.tar.gz'
    sha256sum: '{{ download.mysql_connector.sha256sum }}'

- name: 'Extract mysql connector library distribution'
  shell: >
    umask 0027;
    tar zx -C {{ installer.path }} -f {{ installer.path }}/mysql-connector-java-{{ download.mysql_connector.version }}.tar.gz;
    creates={{ installer.path }}/mysql-connector-java-{{ download.mysql_connector.version }}/mysql-connector-java-{{ download.mysql_connector.version }}-bin.jar

- name: 'Copy over mysql connector lib'
  command: 'cp {{ installer.path }}/mysql-connector-java-{{ download.mysql_connector.version }}/mysql-connector-java-{{ download.mysql_connector.version }}-bin.jar {{ shib_idp.libs }}/ creates="{{ shib_idp.libs }}/mysql-connector-java-{{ download.mysql_connector.version }}-bin.jar"'

- name: 'Link to mysql connector lib'
  file:
    name: '{{ jetty.base }}/lib/ext/mysql-connector-java-bin.jar'
    src: '{{ shib_idp.libs }}/mysql-connector-java-{{ download.mysql_connector.version }}-bin.jar'
    state: link

- name: 'Download placeholder keystore'
  get_url:
    url: '{{ urls.keystore.url }}'
    dest: '{{ jetty.base }}/etc/keystore'
    sha256sum: '{{ download.keystore.sha256sum }}'
    owner: root
    group: jetty
    mode: 0740

- name: 'Set jetty.base file permissions'
  file:
    name: '{{ item }}'
    owner: root
    group: jetty
    mode: 0640
  with_items:
    - '{{ jetty.base }}/etc/keystore'

- name: 'Create IdP log directory'
  file:
    name: /var/log/shibboleth-idp
    owner: jetty
    group: jetty
    mode: 0700
    state: directory

- name: 'Symlink IdP log directory'
  file:
    name: '{{ shib_idp.home }}/logs'
    src: /var/log/shibboleth-idp
    state: link
    owner: root
    group: root
    force: yes

- name: 'Symlink IdP src directory'
  file:
    name: '{{ shib_idp.src_root }}/current'
    src: '{{ shib_idp.src }}'
    state: link
    owner: root
    group: root
    force: yes

- name: 'Symlink IdP instance directory'
  file:
    name: '{{ shib_idp.home_root }}/current'
    src: '{{ shib_idp.home }}'
    state: link
    owner: root
    group: root
    force: yes

- name: 'Create jetty log directory'
  file:
    name: /var/log/jetty
    owner: jetty
    group: jetty
    mode: 0700
    state: directory

- name: 'Symlink jetty log directory'
  file:
    name: '{{ jetty.base }}/logs'
    src: /var/log/jetty
    state: link
    owner: root
    group: root
    force: yes

- name: 'Set metadata provider'
  template:
    src: 'assets/{{inventory_hostname}}/idp/conf/metadata-providers.xml'
    dest: '{{ shib_idp.home }}/conf/metadata-providers.xml'
    owner: root
    group: jetty
    mode: 0640
    backup: yes

- name: 'Set federation attribute filter'
  template:
    src: 'assets/{{inventory_hostname}}/idp/conf/metadata-based-attribute-filter.xml'
    dest: '{{ shib_idp.home }}/conf/metadata-based-attribute-filter.xml'
    owner: root
    group: jetty
    mode: 0640
    backup: yes

- name: 'Set services.xml'
  template:
    src: 'assets/{{inventory_hostname}}/idp/conf/services.xml'
    dest: '{{ shib_idp.home }}/conf/services.xml'
    owner: root
    group: jetty
    mode: 0640
    backup: yes

- name: 'Set saml-nameid.properties'
  template:
    src: 'assets/{{inventory_hostname}}/idp/conf/saml-nameid.properties'
    dest: '{{ shib_idp.home }}/conf/saml-nameid.properties'
    owner: root
    group: jetty
    mode: 0640
    backup: yes

- name: 'Set saml-nameid.xml'
  template:
    src: 'assets/{{inventory_hostname}}/idp/conf/saml-nameid.xml'
    dest: '{{ shib_idp.home }}/conf/saml-nameid.xml'
    owner: root
    group: jetty
    mode: 0640
    backup: yes

- name: 'Get and verify metadata certificate'
  get_url:
    url: '{{ metadata_cert_url }}'
    dest: '{{ shib_idp.home }}/credentials/federation-metadata-cert.pem'
    sha256sum: '{{ metadata_cert_sha256sum }}'
    force: yes
  when: metadata_cert_sha256sum is defined

- name: 'Get metadata certificate without verification'
  get_url:
    url: '{{ metadata_cert_url }}'
    dest: '{{ shib_idp.home }}/credentials/federation-metadata-cert.pem'
    force: yes
  when: metadata_cert_sha256sum is not defined

- name: 'Set attribute resolver'
  template:
    src: 'assets/{{inventory_hostname}}/idp/conf/attribute-resolver.xml'
    dest: '{{ shib_idp.home }}/conf/attribute-resolver.xml'
    owner: root
    group: jetty
    mode: 0640
    backup: yes

- name: 'Set attribute filter'
  template:
    src: 'assets/{{inventory_hostname}}/idp/conf/attribute-filter.xml'
    dest: '{{ shib_idp.home }}/conf/attribute-filter.xml'
    owner: root
    group: jetty
    mode: 0640
    backup: yes

- name: 'Set ldap.properties'
  template:
    src: 'assets/{{inventory_hostname}}/idp/conf/ldap.properties'
    dest: '{{ shib_idp.home }}/conf/ldap.properties'
    owner: root
    group: jetty
    mode: 0640
    backup: yes

- name: 'Set idp.properties'
  template:
    src: 'assets/{{inventory_hostname}}/idp/conf/idp.properties'
    dest: '{{ shib_idp.home }}/conf/idp.properties'
    owner: root
    group: jetty
    mode: 0640
    backup: yes

- name: 'Set global.xml'
  template:
    src: 'assets/{{inventory_hostname}}/idp/conf/global.xml'
    dest: '{{ shib_idp.home }}/conf/global.xml'
    owner: root
    group: jetty
    mode: 0640
    backup: yes

- name: 'Set Shibboleth logback configuration'
  template:
    src: 'assets/{{inventory_hostname}}/idp/conf/logback.xml'
    dest: '{{ shib_idp.home }}/conf/logback.xml'
    owner: root
    group: jetty
    mode: 0640
    backup: yes

- name: 'Set Shibboleth relying-party.xml'
  copy:
    src: 'assets/{{inventory_hostname}}/idp/conf/relying-party.xml'
    dest: '{{ shib_idp.home }}/conf/relying-party.xml'
    owner: root
    group: jetty
    mode: 0640

- name: 'Set Shibboleth credentials.xml'
  copy:
    src: 'assets/{{inventory_hostname}}/idp/conf/credentials.xml'
    dest: '{{ shib_idp.home }}/conf/credentials.xml'
    owner: root
    group: jetty
    mode: 0640  

- name: 'Set authn/general-authn.xml'
  copy:
    src: 'assets/{{inventory_hostname}}/idp/conf/authn/general-authn.xml'
    dest: '{{ shib_idp.home }}/conf/authn/general-authn.xml'
    owner: root
    group: jetty
    mode: 0640

- name: 'Set authn/password-authn-config.xml'
  copy:
    src: 'assets/{{inventory_hostname}}/idp/conf/authn/password-authn-config.xml'
    dest: '{{ shib_idp.home }}/conf/authn/password-authn-config.xml'
    owner: root
    group: jetty
    mode: 0640

- name: 'Set intercept/consent-intercept-config.xml'
  copy:
    src: 'assets/{{inventory_hostname}}/idp/conf/intercept/consent-intercept-config.xml'
    dest: '{{ shib_idp.home }}/conf/intercept/consent-intercept-config.xml'
    owner: root
    group: jetty
    mode: 0640

- name: 'Set intercept/context-check-intercept-config.xml'
  copy:
    src: 'assets/{{inventory_hostname}}/idp/conf/intercept/context-check-intercept-config.xml'
    dest: '{{ shib_idp.home }}/conf/intercept/context-check-intercept-config.xml'
    owner: root
    group: jetty
    mode: 0640

- name: 'Create directory flows/authn/Shibcas'
  file:
    name: '{{ shib_idp.home }}/flows/authn/Shibcas'
    state: directory
    owner: root
    group: jetty
    mode: 0750

- name: 'Set flows/authn/Shibcas/shibcas-authn-beans.xml'
  copy:
    src: 'assets/{{inventory_hostname}}/idp/flows/authn/Shibcas/shibcas-authn-beans.xml'
    dest: '{{ shib_idp.home }}/flows/authn/Shibcas/shibcas-authn-beans.xml'
    owner: root
    group: jetty
    mode: 640

- name: 'Set flows/authn/Shibcas/shibcas-authn-flow.xml'
  copy:
    src: 'assets/{{inventory_hostname}}/idp/flows/authn/Shibcas/shibcas-authn-flow.xml'
    dest: '{{ shib_idp.home }}/flows/authn/Shibcas/shibcas-authn-flow.xml'
    owner: root
    group: jetty
    mode: 640

- name: 'Copy bilateral attribute filters'
  copy:
    src: 'assets/{{inventory_hostname}}/idp/bilateral/filters/'
    dest: '{{ shib_idp.home }}/conf'
    owner: root
    group: jetty
    mode: 0640

- name: 'Copy bilateral metadata'
  copy:
    src: 'assets/{{inventory_hostname}}/idp/bilateral/metadata/'
    dest: '{{ shib_idp.home }}/metadata'
    owner: root
    group: jetty
    mode: 0660

- name: 'Copy bilateral credentials'
  copy:
    src: 'assets/{{inventory_hostname}}/idp/bilateral/credentials/'
    dest: '{{ shib_idp.home }}/credentials'
    owner: root
    group: jetty
    mode: 0640

- include: idp-credentials.yml

- name: 'Fix IdP dir permissions'
  file:
    name: '{{ shib_idp.home }}/{{ item }}'
    owner: root
    group: jetty
    mode: 0775
  with_items:
   - metadata

- name: 'Fix IdP libs permissions and ownership'
  file:
    name: '{{ shib_idp.libs }}/{{ item }}'
    owner: root
    group: jetty
    mode: 0640
  with_items:
  - 'aaf-shib-ext-{{ download.aaf_shib_ext.version }}.jar' 
  - 'cas-client-core-{{ download.cas_client_core.version }}.jar'
  - 'shib-cas-authenticator-{{ download.shib_cas_authenticator.version }}.jar'
  - 'commons-dbcp2-{{ download.commons_dbcp2.version }}.jar'
  - 'commons-pool2-{{ download.commons_pool2.version }}.jar'
  - 'mysql-connector-java-{{ download.mysql_connector.version }}-bin.jar'

- name: 'Fix IdP file permissions'
  file:
    name: '{{ shib_idp.home }}/{{ item }}'
    owner: root
    group: jetty
    mode: 0640
  with_items:
  - conf/access-control.xml
  - conf/attribute-filter.xml
  - conf/attribute-resolver-full.xml
  - conf/attribute-resolver-ldap.xml
  - conf/attribute-resolver.xml
  - conf/audit.xml
  - conf/cas-protocol.xml
  - conf/credentials.xml
  - conf/errors.xml
  - conf/global.xml
  - conf/ldap.properties
  - conf/logback.xml
  - conf/metadata-based-attribute-filter.xml
  - conf/metadata-providers.xml
  - conf/mvc-beans.xml
  - conf/relying-party.xml
  - conf/saml-nameid.properties
  - conf/saml-nameid.xml
  - conf/services.properties
  - conf/services.xml
  - conf/session-manager.xml
  - conf/admin/general-admin.xml
  - conf/admin/metrics.xml
  - conf/authn/authn-comparison.xml
  - conf/authn/authn-events-flow.xml
  - conf/authn/duo-authn-config.xml
  - conf/authn/duo.properties
  - conf/authn/external-authn-config.xml
  - conf/authn/general-authn.xml
  - conf/authn/ipaddress-authn-config.xml
  - conf/authn/jaas-authn-config.xml
  - conf/authn/jaas.config
  - conf/authn/krb5-authn-config.xml
  - conf/authn/ldap-authn-config.xml
  - conf/authn/mfa-authn-config.xml
  - conf/authn/password-authn-config.xml
  - conf/authn/remoteuser-authn-config.xml
  - conf/authn/remoteuser-internal-authn-config.xml
  - conf/authn/spnego-authn-config.xml
  - conf/authn/x509-authn-config.xml
  - conf/authn/x509-internal-authn-config.xml
  - conf/c14n/attribute-sourced-subject-c14n-config.xml
  - conf/c14n/simple-subject-c14n-config.xml
  - conf/c14n/subject-c14n-events-flow.xml
  - conf/c14n/subject-c14n.xml
  - conf/c14n/x500-subject-c14n-config.xml
  - conf/intercept/consent-intercept-config.xml
  - conf/intercept/context-check-intercept-config.xml
  - conf/intercept/expiring-password-intercept-config.xml
  - conf/intercept/intercept-events-flow.xml
  - conf/intercept/profile-intercept.xml
  - credentials/idp-backchannel.p12
  - credentials/idp-encryption.key
  - credentials/idp-signing.key
  - system/conf/services-system.xml
  - flows/authn/Shibcas/shibcas-authn-beans.xml
  - flows/authn/Shibcas/shibcas-authn-flow.xml

- name: 'Install IdP systemd unit'
  template:
    src: templates/idp/idp.service
    dest: /lib/systemd/system/idp.service
    owner: root
    group: root
    mode: 0600
    backup: yes

- name: 'Set favicon'
  copy:
    dest: '/var/www/html/{{ item }}'
    src: 'assets/{{ inventory_hostname }}/idp/branding/images/{{ item }}'
    owner: root
    group: root
    mode: 0644
    backup: yes
  with_items:
    - favicon-mobile.ico
    - favicon.ico

- name: 'Copy Robots.txt File'
  copy:
    dest: '/var/www/html/{{ item }}'
    src: 'assets/{{ inventory_hostname }}/idp/branding/{{ item }}'
    owner: root
    group: root
    mode: 0644
    backup: yes
  with_items:
    - robots.txt

- meta: flush_handlers

- name: 'Enable idp service'
  service: name=idp state=restarted enabled=yes
